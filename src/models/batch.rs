/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.3.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Batch {
  /// The Unix timestamp (in seconds) for when the batch was cancelled.
  #[serde(rename = "cancelled_at")]
  cancelled_at: Option<i32>,
  /// The Unix timestamp (in seconds) for when the batch started cancelling.
  #[serde(rename = "cancelling_at")]
  cancelling_at: Option<i32>,
  /// The Unix timestamp (in seconds) for when the batch was completed.
  #[serde(rename = "completed_at")]
  completed_at: Option<i32>,
  /// The time frame within which the batch should be processed.
  #[serde(rename = "completion_window")]
  completion_window: String,
  /// The Unix timestamp (in seconds) for when the batch was created.
  #[serde(rename = "created_at")]
  created_at: i32,
  /// The OpenAI API endpoint used by the batch.
  #[serde(rename = "endpoint")]
  endpoint: String,
  /// The ID of the file containing the outputs of requests with errors.
  #[serde(rename = "error_file_id")]
  error_file_id: Option<String>,
  #[serde(rename = "errors")]
  errors: Option<crate::models::BatchErrors>,
  /// The Unix timestamp (in seconds) for when the batch expired.
  #[serde(rename = "expired_at")]
  expired_at: Option<i32>,
  /// The Unix timestamp (in seconds) for when the batch will expire.
  #[serde(rename = "expires_at")]
  expires_at: Option<i32>,
  /// The Unix timestamp (in seconds) for when the batch failed.
  #[serde(rename = "failed_at")]
  failed_at: Option<i32>,
  /// The Unix timestamp (in seconds) for when the batch started finalizing.
  #[serde(rename = "finalizing_at")]
  finalizing_at: Option<i32>,
  #[serde(rename = "id")]
  id: String,
  /// The Unix timestamp (in seconds) for when the batch started processing.
  #[serde(rename = "in_progress_at")]
  in_progress_at: Option<i32>,
  /// The ID of the input file for the batch.
  #[serde(rename = "input_file_id")]
  input_file_id: String,
  #[serde(rename = "metadata")]
  metadata: Option<crate::models::Metadata>,
  /// The object type, which is always `batch`.
  #[serde(rename = "object")]
  object: String,
  /// The ID of the file containing the outputs of successfully executed requests.
  #[serde(rename = "output_file_id")]
  output_file_id: Option<String>,
  #[serde(rename = "request_counts")]
  request_counts: Option<crate::models::BatchRequestCounts>,
  /// The current status of the batch.
  #[serde(rename = "status")]
  status: String
}
