/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.3.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// Upload : The Upload object can accept byte chunks in the form of Parts.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Upload {
  /// The intended number of bytes to be uploaded.
  #[serde(rename = "bytes")]
  bytes: i32,
  /// The Unix timestamp (in seconds) for when the Upload was created.
  #[serde(rename = "created_at")]
  created_at: i32,
  /// The Unix timestamp (in seconds) for when the Upload will expire.
  #[serde(rename = "expires_at")]
  expires_at: i32,
  #[serde(rename = "file")]
  file: Option<crate::models::CreateRunRequestToolChoice>,
  /// The name of the file to be uploaded.
  #[serde(rename = "filename")]
  filename: String,
  /// The Upload unique identifier, which can be referenced in API endpoints.
  #[serde(rename = "id")]
  id: String,
  /// The object type, which is always \"upload\".
  #[serde(rename = "object")]
  object: Option<String>,
  /// The intended purpose of the file. [Please refer here](/docs/api-reference/files/object#files/object-purpose) for acceptable values.
  #[serde(rename = "purpose")]
  purpose: String,
  /// The status of the Upload.
  #[serde(rename = "status")]
  status: String
}
