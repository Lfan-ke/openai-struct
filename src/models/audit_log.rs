/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.3.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// AuditLog : A log of a user action or configuration change within this organization.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AuditLog {
  #[serde(rename = "actor")]
  actor: crate::models::AuditLogActor,
  #[serde(rename = "api_key.created")]
  api_key_created: Option<crate::models::AuditLogApiKeyCreated>,
  #[serde(rename = "api_key.deleted")]
  api_key_deleted: Option<crate::models::AuditLogApiKeyDeleted>,
  #[serde(rename = "api_key.updated")]
  api_key_updated: Option<crate::models::AuditLogApiKeyUpdated>,
  #[serde(rename = "certificate.created")]
  certificate_created: Option<crate::models::AuditLogCertificateCreated>,
  #[serde(rename = "certificate.deleted")]
  certificate_deleted: Option<crate::models::AuditLogCertificateDeleted>,
  #[serde(rename = "certificate.updated")]
  certificate_updated: Option<crate::models::AuditLogCertificateCreated>,
  #[serde(rename = "certificates.activated")]
  certificates_activated: Option<crate::models::AuditLogCertificatesActivated>,
  #[serde(rename = "certificates.deactivated")]
  certificates_deactivated: Option<crate::models::AuditLogCertificatesActivated>,
  #[serde(rename = "checkpoint_permission.created")]
  checkpoint_permission_created: Option<crate::models::AuditLogCheckpointPermissionCreated>,
  #[serde(rename = "checkpoint_permission.deleted")]
  checkpoint_permission_deleted: Option<crate::models::AuditLogCheckpointPermissionDeleted>,
  /// The Unix timestamp (in seconds) of the event.
  #[serde(rename = "effective_at")]
  effective_at: i32,
  /// The ID of this log.
  #[serde(rename = "id")]
  id: String,
  #[serde(rename = "invite.accepted")]
  invite_accepted: Option<crate::models::AuditLogInviteAccepted>,
  #[serde(rename = "invite.deleted")]
  invite_deleted: Option<crate::models::AuditLogInviteAccepted>,
  #[serde(rename = "invite.sent")]
  invite_sent: Option<crate::models::AuditLogInviteSent>,
  #[serde(rename = "login.failed")]
  login_failed: Option<crate::models::AuditLogLoginFailed>,
  #[serde(rename = "logout.failed")]
  logout_failed: Option<crate::models::AuditLogLoginFailed>,
  #[serde(rename = "organization.updated")]
  organization_updated: Option<crate::models::AuditLogOrganizationUpdated>,
  #[serde(rename = "project")]
  project: Option<crate::models::AuditLogProject>,
  #[serde(rename = "project.archived")]
  project_archived: Option<crate::models::AuditLogProjectArchived>,
  #[serde(rename = "project.created")]
  project_created: Option<crate::models::AuditLogProjectCreated>,
  #[serde(rename = "project.updated")]
  project_updated: Option<crate::models::AuditLogProjectUpdated>,
  #[serde(rename = "rate_limit.deleted")]
  rate_limit_deleted: Option<crate::models::AuditLogRateLimitDeleted>,
  #[serde(rename = "rate_limit.updated")]
  rate_limit_updated: Option<crate::models::AuditLogRateLimitUpdated>,
  #[serde(rename = "service_account.created")]
  service_account_created: Option<crate::models::AuditLogServiceAccountCreated>,
  #[serde(rename = "service_account.deleted")]
  service_account_deleted: Option<crate::models::AuditLogServiceAccountDeleted>,
  #[serde(rename = "service_account.updated")]
  service_account_updated: Option<crate::models::AuditLogServiceAccountUpdated>,
  #[serde(rename = "type")]
  _type: crate::models::AuditLogEventType,
  #[serde(rename = "user.added")]
  user_added: Option<crate::models::AuditLogUserAdded>,
  #[serde(rename = "user.deleted")]
  user_deleted: Option<crate::models::AuditLogUserDeleted>,
  #[serde(rename = "user.updated")]
  user_updated: Option<crate::models::AuditLogUserUpdated>
}
